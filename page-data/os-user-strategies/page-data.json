{"componentChunkName":"component---src-templates-post-js","path":"/os-user-strategies/","result":{"data":{"ghostPost":{"id":"Ghost__Post__63d180e2304f20003d70b744","title":"3 user-centric growth strategies for open source","slug":"os-user-strategies","featured":false,"feature_image":"https://sdv.ghost.io/content/images/2023/01/Header.png","excerpt":"Our open source grew faster when we adopted a user-centric mindset. Here are 3 strategies we used along the way.","custom_excerpt":"Our open source grew faster when we adopted a user-centric mindset. Here are 3 strategies we used along the way.","visibility":"public","created_at_pretty":"25 January, 2023","published_at_pretty":"26 January, 2023","updated_at_pretty":"26 January, 2023","created_at":"2023-01-25T14:20:02.000-05:00","published_at":"2023-01-25T19:39:12.000-05:00","updated_at":"2023-01-26T15:31:32.000-05:00","meta_title":"3 user-centric growth strategies for open source","meta_description":"Our open source grew faster when we adopted a user-centric mindset. Here are 3 strategies we used along the way.","og_description":null,"og_image":null,"og_title":null,"twitter_description":"Our open source grew faster when we adopted a user-centric mindset. Here are 3 strategies we used.","twitter_image":null,"twitter_title":"3 user-centric growth strategies for open source","authors":[{"name":"Neha Patki","slug":"neha","bio":"Neha first created the SDV for her Master's thesis at MIT and also has experience in Product Management from Google. She is excited to use her expertise to build a great user experience at DataCebo.","profile_image":"https://sdv.ghost.io/content/images/2021/05/Neha_Patki--1-.jpg","twitter":"@n4atki","facebook":null,"website":"https://www.linkedin.com/in/nehapatki/"}],"primary_author":{"name":"Neha Patki","slug":"neha","bio":"Neha first created the SDV for her Master's thesis at MIT and also has experience in Product Management from Google. She is excited to use her expertise to build a great user experience at DataCebo.","profile_image":"https://sdv.ghost.io/content/images/2021/05/Neha_Patki--1-.jpg","twitter":"@n4atki","facebook":null,"website":"https://www.linkedin.com/in/nehapatki/"},"primary_tag":{"name":"Open Source","slug":"open-source","description":"The Synthetic Data Vault (SDV) is the largest open source platform for tabular synthetic data creation and evaluation. Join our journey as we share insights from our global user base and evolve our strategy.","feature_image":null,"meta_description":null,"meta_title":null,"visibility":"public"},"tags":[{"name":"Open Source","slug":"open-source","description":"The Synthetic Data Vault (SDV) is the largest open source platform for tabular synthetic data creation and evaluation. Join our journey as we share insights from our global user base and evolve our strategy.","feature_image":null,"meta_description":null,"meta_title":null,"visibility":"public"}],"plaintext":"In a previous article, we discussed why, when developing our open source libraries, we emphasize growing our overall users – not just our contributors. We elaborated on why we focus on everyone who uses our software to solve a problem, as opposed to following the more traditional open source practice of catering specifically to code contributors.\n\nBut we cannot stop at defining our focus – we have to put it into practice. In this article, we'll share some practical strategies we have learned in the course of adopting this more user-centric mindset.\n\nWe have come to these strategies by regularly interacting with the users who have adopted the SDV ecosystem, and we've iterated them until we found success. (Some of our libraries are already at 1 million downloads!) This has given us confidence in our approach, which we're excited to share below.\n\n\n1. Find the right channels to reach more users\n\nOur first strategy involves our overall presence as an open source ecosystem.\n\nShifting our focus to users has allowed us to think more critically about who we are trying to help, and whether we are actually reaching them. For example, we were initially prioritizing checking and responding to questions on GitHub, a platform that makes it easy to reference technical material and scrutinize bugs.\n\nBut GitHub caters primarily to contributors – and thus leaves out the rest of the users we'd like to reach. In fact, those users may not have GitHub accounts at all! They are more likely to feel at home when they can ask us questions directly, working with us to improve their understanding. They often don't have the time to dig through technical discussions, or the desire to create an issue on GitHub, especially if their question is more fundamental. (Since “issue creation” has always been defined as a part of the software development lifecycle, users may not feel comfortable asking more basic questions there.)\n\nTo find the users we wanted, we decided to expand our presence to other platforms that cater to their needs. We have found Slack to be a great solution – it is welcoming and easy to use, and enables direct communication. Today, our Slack is a fast-growing community of over 800 members, and a new space for us to learn about how people use our software.\n\n\n2. Users are just as important as contributors\n\nOur attitude towards users matters just as much as their ability to find us.\n\nAs the core maintainers for an open source project, we all have a deep passion for software. It is natural for us to want our users to share this passion – and also natural to perceive a lack of initiative if a user hasn't understood certain concepts. But in our drive to recognize the importance of all users, we have learned to understand — and even embrace — that many users have different needs and time pressures than we are used to.\n\nFor example, we frequently receive questions about how to upload a CSV file into Python. This is a standard data science procedure, so some might label this question as \"lazy.\" We don't believe that's true. In fact, these users may be picking up Python for the first time because they think our software could solve their problem, which shows a lot of initiative. They are not unqualified to use our library; they might just need a helping hand.\n\nTo figure out what will actually help users, we put ourselves in their shoes. This mindset has led to some of our current best practices:\n\n * Empathize with the user's pain points. Working on software openly means that we'll get more feedback more often. Often, an issue identified by a user may already be on our roadmap, is inspiring internal debates, or is on hold until we have more resources. When we're reminded of such an issue, it can be easy to get defensive and engage in a debate – which ultimately wastes everyone's time. Instead, we use the opportunity to build camaraderie. We always try to replicate users' issues, which helps us acknowledge the frustration because we feel it too. No software is perfect!\n * Focus on the problem, not the solution. Because our users do not have our domain expertise, they'll sometimes request features that seem difficult to accommodate. When this happens, we remind ourselves that it's not the user's job to understand our system. Rather, it's our duty to dig deeper and find the root of the concern. This helps us design new features in a way that matches our vision and satisfies users.\n * Above all else, move them forward. When a user has a request, we aim to provide a timely, focused response so that they can take the next step in their usage journey. If we can't immediately resolve the issue, we provide workarounds that allow their projects to proceed. This is more difficult than it seems. At times, we want to passionately respond with our own long-term vision — but this is not useful to users who just want their project to work.\n\nThe illustration below shows a hypothetical example of using these best practices.\n\nThese best practices reflect our overall attitude, which elevates users to the same level of importance as open source contributors.\n\n\n3. Go the extra mile – it only takes a few minutes!\n\nGoing above and beyond can mean creating special material for users and learning to speak their language. By now, it has become standard practice for us to disambiguate and translate our technical communications for a more general audience.\n\nOur SDV ecosystem is filled with examples of conveying the same information in multiple ways. Below are some excerpts from our announcement of a new version of SDV (0.16.0) in July 2022.\n\n\nThe SDV open source contributors are familiar with technical concepts like “unify sampling params for reject sampling” or “Add create_custom_constraint factory method”. They're also interested in following along with specific GitHub issues, which link to the code changes.\n\nMeanwhile, user-centric communication focuses on the pain points that we've solved. This is informative for current users and welcoming for new ones. As a result, users coming to our library for the first time can scan through the Slack channel to see what we're working on. Best of all, because we're thinking in these different ways already, it only takes a few minutes to draft these different types of announcements!\n\n\nConclusion\n\nAdopting a user-centric mindset has significantly contributed to our open source growth. We started by identifying users and finding the right channels to reach them, which naturally expanded our open source presence. Then we learned to empathize with users and embrace their needs, which has manifested as more productive conversations and relationships. Finally, we always think it's great to go above and beyond – especially if it only takes a few minutes!\n\nAre there any strategies we've missed? Let us know what you think in the comments below!","html":"<p>In a <a href=\"https://datacebo.com/blog/open-source-user-demographic\">previous article</a>, we discussed why, when developing our open source libraries, we emphasize growing our overall users – not just our contributors. We elaborated on why we focus on everyone who <em>uses</em> our software to solve a problem, as opposed to following the more traditional open source practice of catering specifically to code contributors.</p><p>But we cannot stop at defining our focus – we have to put it into practice. In this article, we'll share some practical strategies we have learned in the course of adopting this more user-centric mindset. </p><p>We have come to these strategies by regularly interacting with the users who have adopted the <a href=\"https://sdv.dev/\">SDV ecosystem</a>, and we've iterated them until we found success. (Some of our libraries are already at <a href=\"https://pepy.tech/project/copulas\">1 million downloads</a>!) This has given us confidence in our approach, which we're excited to share below.</p><h3 id=\"1-find-the-right-channels-to-reach-more-users\">1. Find the right channels to reach more users</h3><p>Our first strategy involves our overall presence as an open source ecosystem.</p><p>Shifting our focus to users has allowed us to think more critically about who we are trying to help, and whether we are actually reaching them. For example, we were initially prioritizing checking and responding to questions on <a href=\"https://github.com/sdv-dev/SDV/issues\">GitHub</a>, a platform that makes it easy to reference technical material and scrutinize bugs. </p><p>But GitHub caters primarily to contributors – and thus leaves out the rest of the users we'd like to reach. In fact, those users may not have GitHub accounts at all! They are more likely to feel at home when they can ask us questions directly, working with us to improve their understanding. They often don't have the time to dig through technical discussions, or the desire to create an issue on GitHub, especially if their question is more fundamental. (Since “issue creation” has always been defined as a part of the software development lifecycle, users may not feel comfortable asking more basic questions there.)</p><p>To find the users we wanted, we decided to <strong>expand our presence to other platforms that cater to their needs</strong>. We have found Slack to be a great solution – it is welcoming and easy to use, and enables direct communication. Today, <a href=\"https://bit.ly/sdv-slack-invite\">our Slack</a> is a fast-growing community of over 800 members, and a new space for us to learn about how people use our software.</p><h3 id=\"2-users-are-just-as-important-as-contributors\">2. Users are just as important as contributors</h3><p>Our attitude towards users matters just as much as their ability to find us.</p><p>As the core maintainers for an open source project, we all have a deep passion for software. It is natural for us to want our users to share this passion – and also natural to perceive a lack of initiative if a user hasn't understood certain concepts. But in our drive to recognize the importance of all users, we have learned to understand — and even embrace — that many users have different needs and time pressures than we are used to.</p><p>For example, we frequently receive questions about how to upload a CSV file into Python. This is a standard data science procedure, so some might label this question as \"lazy.\" We don't believe that's true. In fact, these users may be picking up Python for the first time because they think our software could solve their problem, which shows a lot of initiative. They are not unqualified to use our library; they might just need a helping hand.</p><p>To figure out what will actually help users, we put ourselves in their shoes. This mindset has led to some of our current best practices:</p><ul><li><strong>Empathize with the user's pain points.</strong> Working on software openly means that we'll get more feedback more often. Often, an issue identified by a user may already be on our roadmap, is inspiring internal debates, or is on hold until we have more resources. When we're reminded of such an issue, it can be easy to get defensive and engage in a debate – which ultimately wastes everyone's time. Instead, we use the opportunity to build camaraderie. We always try to replicate users' issues, which helps us acknowledge the frustration because we feel it too. No software is perfect!</li><li><strong>Focus on the problem, not the solution.</strong> Because our users do not have our domain expertise, they'll sometimes request features that seem difficult to accommodate. When this happens, we remind ourselves that it's not the user's job to understand our system. Rather, it's our duty to dig deeper and find the root of the concern. This helps us design new features in a way that matches our vision <em>and</em> satisfies users.</li><li><strong>Above all else, move them forward. </strong>When a user has a request, we aim to provide a timely, focused response so that they can take the next step in their usage journey. If we can't immediately resolve the issue, we provide workarounds that allow their projects to proceed. This is more difficult than it seems. At times, we want to passionately respond with our own long-term vision — but this is not useful to users who just want their project to work.</li></ul><p>The illustration below shows a hypothetical example of using these best practices.</p><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://sdv.ghost.io/content/images/2023/01/Conversation-2.png\" class=\"kg-image\" alt loading=\"lazy\" width=\"1500\" height=\"1000\" srcset=\"https://sdv.ghost.io/content/images/size/w600/2023/01/Conversation-2.png 600w, https://sdv.ghost.io/content/images/size/w1000/2023/01/Conversation-2.png 1000w, https://sdv.ghost.io/content/images/2023/01/Conversation-2.png 1500w\" sizes=\"(min-width: 720px) 720px\"><figcaption><em>An example of a conversation the SDV team might have with a user. In this instance, the user is requesting a new algorithm, which may not be compatible with our current software. But the root concern is data quality – a need that we can address more quickly through other workarounds.</em></figcaption></figure><p>These best practices reflect our overall attitude, which elevates users to the same level of importance as open source contributors.</p><h3 id=\"3-go-the-extra-mile-%E2%80%93-it-only-takes-a-few-minutes\">3. Go the extra mile – it only takes a few minutes!</h3><p>Going above and beyond can mean creating special material for users and learning to speak their language. By now, it has become standard practice for us to disambiguate and translate our technical communications for a more general audience. </p><p>Our SDV ecosystem is filled with examples of conveying the same information in multiple ways. Below are some excerpts from our announcement of a new version of SDV (0.16.0) in July 2022.</p><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://sdv.ghost.io/content/images/2023/01/Communication-Styles-Comparison-1.png\" class=\"kg-image\" alt loading=\"lazy\" width=\"2000\" height=\"1000\" srcset=\"https://sdv.ghost.io/content/images/size/w600/2023/01/Communication-Styles-Comparison-1.png 600w, https://sdv.ghost.io/content/images/size/w1000/2023/01/Communication-Styles-Comparison-1.png 1000w, https://sdv.ghost.io/content/images/size/w1600/2023/01/Communication-Styles-Comparison-1.png 1600w, https://sdv.ghost.io/content/images/2023/01/Communication-Styles-Comparison-1.png 2000w\" sizes=\"(min-width: 720px) 720px\"><figcaption><em>Selected excerpts from announcements of a new SDV version, disseminated on two different platforms. We communicate the same information in different ways based on what we know about our users.</em></figcaption></figure><p><br>The SDV open source contributors are familiar with technical concepts like “unify sampling params for reject sampling” or “Add create_custom_constraint factory method”. They're also interested in following along with specific GitHub issues, which link to the code changes.</p><p>Meanwhile, user-centric communication focuses on the pain points that we've solved. This is informative for current users and welcoming for new ones. As a result, users coming to our library for the first time can scan through the Slack channel to see what we're working on. Best of all, because we're thinking in these different ways already, it only takes a few minutes to draft these different types of announcements!</p><h3 id=\"conclusion\">Conclusion</h3><p>Adopting a user-centric mindset has significantly contributed to our open source growth. We started by identifying users and finding the right channels to reach them, which naturally expanded our open source presence. Then we learned to empathize with users and embrace their needs, which has manifested as more productive conversations and relationships. Finally, we always think it's great to go above and beyond – especially if it only takes a few minutes!</p><p><em>Are there any strategies we've missed? Let us know what you think in the comments below!</em></p>","url":"https://sdv.ghost.io/os-user-strategies/","canonical_url":"https://datacebo.com/blog/os-user-strategies","uuid":"39669dee-8188-4936-82a2-741037eb0516","page":null,"codeinjection_foot":null,"codeinjection_head":null,"codeinjection_styles":null,"comment_id":"63d180e2304f20003d70b744","reading_time":5}},"pageContext":{"slug":"os-user-strategies"}},"staticQueryHashes":["2061773391","2358152166","2362887240","2439066133","2561578252","2657115718","2731221146","2839364760","4145280475"]}